@using RehabilitationSystem.ViewModels.Announcement;

@model List<GetAnnouncement>

<div class="row">
    <div class="col-md-12 grid-margin">
        <div class="d-flex justify-content-between flex-wrap">
            <div class="d-flex align-items-end flex-wrap">
                <div class="me-md-3 me-xl-5">
                    <h2>Announcement</h2>
                    <br />
                    <div class="mb-md-0">
                        <a asp-controller="Announcement" asp-action="Create" class="btn btn-success mt-2 mt-xl-0">
                            <i class="mdi mdi-plus" style="font-size:15px"></i> &nbsp Create New Annoucement
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title">Announcement List</p>
                <div class="table-responsive">
                    <table id="recent-purchases-listing" class="table table-hover">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Date Created</th>
                                <th>Posting</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var obj in Model)
                            {
                                <tr>
                                    <td>@obj.Title</td>
                                    <td>@obj.Date</td>
                                    <td>
                                        <label class="switch">
                                            <input type="checkbox" data-id="@obj.AnnouncementId" @if (obj.Status != null && obj.Status != false) { <text>checked</text> } onchange="toggleSwitch(this)">
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td>
                                        <a asp-controller="Announcement" asp-action="Edit" asp-route-id="@obj.AnnouncementId" class="btn btn-datatable btn-icon mt-1">
                                            <i class="mdi mdi-border-color" style="color:blue; font-size:25px;"></i>
                                        </a>
                                        <a onclick="Delete('@obj.AnnouncementId')" class="btn btn-datatable btn-icon">
                                            <i class="mdi mdi-delete-forever" style="color:red; font-size:25px;"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function toggleSwitch(checkbox) {
        var announcementId = checkbox.getAttribute('data-id');
        var status = checkbox.checked;

        Swal.fire({
            title: 'Are you sure?',
            text: status ? 'Do you want to turn on posting?' : 'Do you want to turn off posting?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: status ? 'Yes, turn on' : 'Yes, turn off',
            cancelButtonText: 'Cancel',
        }).then((result) => {
            if (result.isConfirmed) {
                // User confirmed, send AJAX request to update status
                $.ajax({
                    type: "POST",
                    url: '/Admin/Announcement/UpdateStatus', // URL of the update action
                    data: { id: announcementId },
                    dataType: "json",
                    success: function (response) {
                        if (response.success) {
                            Swal.fire(
                                'Updated!',
                                'Announcement status has been updated.',
                                'success'
                            );
                        } else {
                            Swal.fire(
                                'Error!',
                                response.message,
                                'error'
                            );
                            checkbox.checked = !status; // Revert checkbox state if update failed
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'An error occurred while updating the announcement status.',
                            'error'
                        );
                        checkbox.checked = !status; // Revert checkbox state if update failed
                    }
                });
            } else {
                // User canceled, revert checkbox state
                checkbox.checked = !status;
            }
        });
    }

    function Delete(ID) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '/Admin/Announcement/Delete', // URL of the delete action
                    data: { id: ID },
                    dataType: "json",
                    @*contentType: "application/json; charset=utf-8",*@
                    success: function (response) {
                        if (response.success) {
                            Swal.fire(
                                'Deleted!',
                                'Your Announcement has been deleted.',
                                'success'
                            ).then(() => {
                                location.reload(); // Refresh the page after confirmation dialog is closed
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                response.message,
                                'error'
                            );
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'An error occurred while deleting the announcement.',
                            'error'
                        );
                    }
                });
            }
        });
    }
</script>
