@using RehabilitationSystem.ViewModels.Program;

@model GetProgram

<style>
    .popup {
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
        display: none;
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
    }

    .popup-content {
        position: relative;
        background-color: white;
        margin: 10% auto;
        padding: 20px;
        border: 1px solid #888888;
        width: 50%;
        font-weight: bolder;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;
        transform: scale(0.8);
        opacity: 0;
    }

        .popup-content.show {
            transform: scale(1);
            opacity: 1;
        }

        .popup-content button {
            display: block;
            margin: 0 auto;
        }

    .show {
        display: block;
        opacity: 1;
    }

    .popup-close {
        position: absolute;
        right: 15px;
        top: 10px;
        font-size: 28px;
        font-weight: bold;
        color: black;
        cursor: pointer;
    }

        .popup-close:hover,
        .popup-close:focus {
            color: black;
            text-decoration: none;
        }

    .scrollable-table-container {
        max-height: 300px; /* Adjust this height as needed */
        overflow-y: auto;
    }
</style>

<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <div class="d-flex align-items-center justify-content-between">
                <div class="me-3">
                    <div class="small">Program Name:</div>
                    <br />
                    <div class="h2">@Model.Name</div>
                </div>
            </div>
        </div>
        <hr>
        <div class="card-body">
            <h1 class="card-title">Program Objective</h1>
            <p>@Model.Objective</p>
        </div>
        <div class="card-body">
            <p class="card-title">Program Description</p>
            <p>@Model.Description</p>
        </div>
        <div class="card-body">
            <p class="card-title">Program Price</p>
            <p>RM @Model.Price</p>
        </div>
        <div class="card-body">
            <p class="card-title">Session List</p>
            <div class="mb-md-0">
                <a asp-controller="Session" asp-action="Create" asp-route-id="@Model.ProgramId" class="btn btn-success">
                    <i class="mdi mdi-plus"></i> &nbsp Create Session
                </a>
            </div>
            <br />
            <div class="table-responsive">
                <table id="recent-purchases-listing" class="table">
                    <thead>
                        <tr>
                            <th>Session</th>
                            <th>Therapist</th>
                            <th>unknown</th>
                            <th>unknown</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in @Model.Sessions)
                        {
                            <tr>
                                <td>@obj.Name</td>
                                <td>@obj.Therapists</td>
                                <td>dummydata</td>
                                <td>dummydata</td>
                                <td>
                                    <a onclick="SlotPopUp('@obj.SessionId')" class="btn btn-icon">
                                        <i class="mdi mdi-calendar" style="color:blue; font-size:25px;"></i>
                                    </a>
                                    <a onclick="TherapistSessionPopUp('@obj.SessionId')" class="btn btn-icon">
                                        <i class="mdi mdi-account" style="color:blue; font-size:25px;"></i>
                                    </a>
                                    <a asp-controller="Session" asp-action="Edit" asp-route-id="@obj.SessionId" asp-route-programId="@Model.ProgramId" class="btn btn-icon mt-1">
                                        <i class="mdi mdi-border-color" style="color:blue; font-size:25px;"></i>
                                    </a>
                                    <a onclick="DeleteSession('@obj.SessionId')" class="btn btn-icon">
                                        <i class="mdi mdi-delete-forever" style="color:red; font-size:25px;"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div id="myPopup" class="popup">
    <div class="popup-content">
        <span class="popup-close">&times;</span>
        <h2>
            Session/Slots
        </h2>
        <br />
        <form method="post" class="forms-sample" id="slotForm">
            <div class="form-group row">
                <div class="input-group">
                    <div class="input-group">
                        <label for="therapistSelect" class="mt-2">Therapist: &nbsp&nbsp&nbsp</label>
                        <div class="col">
                            <select id="therapistSelect" class="form-control mb-2" required>
                                <!-- Add more options as needed -->
                            </select>
                        </div>
                        <span class="ms-2" style="width:50px"></span>
                    </div>
                    <div class="input-group">
                        <label for="startTime" class="mt-2">Start Time: &nbsp&nbsp</label>
                        <div class="col">
                            <input type="datetime-local" id="startTime" class="form-control mb-2" required>
                        </div>
                        <span class="ms-2" style="width:50px"></span>
                    </div>
                    <div class="input-group">
                        <label for="endTime" class="mt-2">End Time: &nbsp&nbsp&nbsp&nbsp</label>
                        <div class="col">
                            <input type="datetime-local" id="endTime" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-primary ms-2 input-group-append" style="width:50px">Add</button>
                    </div>
                    <input type="text" id="sessionId" class="form-control mb-2" hidden>
                </div>
            </div>
        </form>
        <div class="scrollable-table-container">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Slots</th>
                        <th>Therapist</th>
                        <th>Date Time</th>
                        <th>Duration</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="slotTableBody">
                    <!-- Slot data will be dynamically inserted here -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<div id="TherapistSessionPopup" class="popup">
    <div class="popup-content">
        <span class="popup-close" onclick="closeTherapistSessionPopup()">&times;</span>
        <h2>
            Therapist Session
        </h2>
        <br />
        <form method="post" class="forms-sample" id="therapistSessionForm">
            <div class="form-group row">
                <div class="input-group">
                    <div class="input-group">
                        <label for="therapist" class="mt-2">Therapist: &nbsp&nbsp&nbsp</label>
                        <div class="col">
                            <select id="therapistSelectSession" class="form-control mb-2" required>
                                <!-- Add more options as needed -->
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary ms-2 input-group-append" style="width:50px">Add</button>
                        <input type="text" id="sessionId" class="form-control mb-2" hidden>
                    </div>
                </div>
            </div>
        </form>
        <div class="scrollable-table-container">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Therapist Name</th>
                        <th>Phone</th>
                        <th>Unknown</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="therapistSessionTableBody">
                    <!-- Slot data will be dynamically inserted here -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    var myButton = document.getElementById("myButton");
    var myPopup = document.getElementById("myPopup");
    var TherapistSessionPopup = document.getElementById("TherapistSessionPopup");
    var closePopup = document.querySelector(".popup-close");
    var slotsTableBody = document.querySelector("#myPopup .popup-content tbody");
    var therapistSelect = document.getElementById("therapistSelect");

    function SlotPopUp(sessionId) {
        var myPopup = document.getElementById("myPopup");
        therapistSelect.innerHTML = "";

        // AJAX request to fetch session slots
        fetch(`/Slot/GetSlotsBySessionId?sessionId=${sessionId}`)
            .then(response => response.json())
            .then(data => {
                // Populate the popup content with the data

                slotsTableBody.innerHTML = ""; // Clear existing rows

                data = JSON.parse(JSON.stringify(data));
                var therapists = JSON.parse(JSON.stringify(data.therapists));
                var slots = JSON.parse(JSON.stringify(data.slots));
                var i = 1;
                document.getElementById('sessionId').value = data.sessionId;

                slots.forEach(slot => {
                    solt = JSON.stringify(slot);

                    var startTime = new Date(slot.startTime);
                    var endTime = new Date(slot.endTime);
                    var duration = (endTime - startTime) / (1000 * 60); // Duration in minutes

                    var dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };
                    var timeOptions = { hour: '2-digit', minute: '2-digit' };

                    var row = document.createElement("tr");
                    row.innerHTML = `
                    <td>${i++}</td>
                    <td>${slot.therapistSession.therapist.name}</td>
                    <td>${startTime.toLocaleDateString(undefined, dateOptions)} ${startTime.toLocaleTimeString(undefined, timeOptions)}</td>
                    <td>${duration} minutes</td>
                    <td>
                        <a onclick="DeleteSlot('${sessionId}', '${slot.slotId}')" class="btn btn-datatable btn-icon">
                            <i class="mdi mdi-delete-forever" style="color:red; font-size:25px;"></i>
                        </a>
                    </td>
                    `;
                    slotsTableBody.appendChild(row);
                });

                therapists.forEach(therapist => {
                    var option = document.createElement("option");
                    option.value = therapist.therapistId;
                    option.text = therapist.name;
                    therapistSelect.appendChild(option);
                });

                // Show the popup
                myPopup.classList.add("show");
                setTimeout(function () {
                    myPopup.querySelector('.popup-content').classList.add("show");
                }, 100); // Delay to ensure the popup has shown
            })
            .catch(error => {
                console.error('Error fetching slots:', error);
            });

    }

    function TherapistSessionPopUp(sessionId) {
        var TherapistSessionPopup = document.getElementById("TherapistSessionPopup");
        var therapistSessionTableBody = document.querySelector("#TherapistSessionPopup .popup-content tbody");
        var therapistSelectSession = document.getElementById("therapistSelectSession");

        document.getElementById('sessionId').value = sessionId;

        // AJAX request to fetch therapist
        fetch(`/Therapist/GetTherapists`)
            .then(response => response.json())
            .then(therapists => {
                // Populate the popup content with the data
                therapists = JSON.parse(JSON.stringify(therapists));

                therapistSelectSession.innerHTML = ""; // Clear existing options
                therapists.forEach(therapist => {
                    var option = document.createElement("option");
                    option.value = therapist.therapistId;
                    option.text = therapist.name;
                    therapistSelectSession.appendChild(option);
                });

                
            })
            .catch (error => {
                console.error('Error fetching slots:', error);
            });

        fetch(`/Slot/GetSlotsBySessionId?sessionId=${sessionId}`)
            .then(response => response.json())
            .then(data => {
                // Populate the popup content with the data
                therapistSessionTableBody.innerHTML = ""; // Clear existing rows

                data = JSON.parse(JSON.stringify(data));
                var therapists = JSON.parse(JSON.stringify(data.therapists));

@*                Swal.fire({
                    title: 'Are you sure?',
                    text: JSON.stringify(data),
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                });*@

                therapists.forEach(therapist => {
                    var row = document.createElement("tr");
                    row.innerHTML = `
                    <td>${therapist.name}</td>
                    <td>${therapist.appUser.phone}</td>
                    <td>${therapist.appUser.email}</td>
                    <td>
                        <a onclick="DeleteTherapistSession('${data.sessionId}', '${therapist.therapistId}')" class="btn btn-datatable btn-icon">
                            <i class="mdi mdi-delete-forever" style="color:red; font-size:25px;"></i>
                        </a>
                    </td>
                    `;
                    therapistSessionTableBody.appendChild(row);
                });

            })
            .catch(error => {
                console.error('Error fetching slots:', error);
            });

        TherapistSessionPopup.classList.add("show");
        setTimeout(function () {
            TherapistSessionPopup.querySelector('.popup-content').classList.add("show");
        }, 100); // Delay to ensure the popup has shown
    }

    closePopup.addEventListener("click", function () {
        myPopup.querySelector('.popup-content').classList.remove("show");
        setTimeout(function () {
            myPopup.classList.remove("show");
        }, 300); // Delay to match the transition duration

        // Clear the datetime inputs
        document.getElementById('startTime').value = '';
        document.getElementById('endTime').value = '';
    });

    window.addEventListener("click", function (event) {
        if (event.target == myPopup) {
            myPopup.querySelector('.popup-content').classList.remove("show");
            setTimeout(function () {
                myPopup.classList.remove("show");
            }, 300); // Delay to match the transition duration

            // Clear the datetime inputs
            document.getElementById('startTime').value = '';
            document.getElementById('endTime').value = '';
        }
    });

    function closeTherapistSessionPopup() {
        var TherapistSessionPopup = document.getElementById("TherapistSessionPopup");
        TherapistSessionPopup.querySelector('.popup-content').classList.remove("show");
        setTimeout(function () {
            TherapistSessionPopup.classList.remove("show");
        }, 300); // Delay to match the transition duration
    }

    window.addEventListener("click", function (event) {
        var TherapistSessionPopup = document.getElementById("TherapistSessionPopup");
        if (event.target == TherapistSessionPopup) {
            closeTherapistSessionPopup();
        }
    });

    document.getElementById('startTime').addEventListener('input', function () {
        const startTime = new Date(this.value);
        if (isNaN(startTime.getTime())) return;

        startTime.setHours(startTime.getHours() + 9);
        const endTime = new Date(startTime);
        document.getElementById('endTime').value = startTime.toISOString().slice(0, 16);
    });

    document.getElementById('slotForm').addEventListener('submit', async function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Collect form data
        const sessionId = document.getElementById('sessionId').value
        const therapistId = document.getElementById('therapistSelect').value;
        const startTime = document.getElementById('startTime').value;
        const endTime = document.getElementById('endTime').value;

        // Prepare data to send
        const data =  {
            sessionId: sessionId,
            therapistId: therapistId,
            startTime: startTime,
            endTime: endTime
        };

        try {
            // Send data to SlotController
            const response = await fetch('/Slot/AddSlot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify(data),
            });

            // Handle response
            if (response.ok) {
                const result = await response.json();
                alert('Slot added successfully!');
                // Clear the datetime inputs
                document.getElementById('startTime').value = '';
                document.getElementById('endTime').value = '';
                // Call the popup window for refresh
                SlotPopUp(sessionId);
            } else {
                const error = await response.json();
                alert('Failed to add slot: ' + error.message);
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while adding the slot. HAHA' + error);
        }
    });

    document.getElementById('therapistSessionForm').addEventListener('submit', async function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Collect form data
        const sessionId = document.getElementById('sessionId').value;
        const therapistId = document.getElementById('therapistSelectSession').value;

        // Prepare data to send
        const data = {
            therapistId: therapistId,
            sessionId: sessionId
        };

        try {
            // Send data to your server endpoint
            const response = await fetch('/TherapistSession/AddTherapistSession', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify(data),
            });

            // Handle response
            if (response.ok) {
                const result = await response.json();
                alert('Therapist session added successfully!');
                // Clear the form inputs
                document.getElementById('therapistSelectSession').value = ''; // Reset the therapist select
                // Call any function for refreshing or updating UI as needed
                // For example, you can call a function to refresh the therapist session table
                TherapistSessionPopUp(sessionId);
            } else {
                const error = await response.json();
                alert('Failed to add therapist session: ' + error.message);
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while adding the therapist session.' + error);
        }
    });

    function DeleteSession(ID) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '/Session/Delete', // URL of the delete action
                    data: { id: ID },
                    dataType: "json",
                    @* contentType: "application/json; charset=utf-8",*@
                success: function (response) {
                    if (response.success) {
                        Swal.fire(
                            'Deleted!',
                            'Your session has been deleted.',
                            'success'
                        ).then(() => {
                            location.reload(); // Refresh the page after confirmation dialog is closed
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            response.message,
                            'error'
                        );
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire(
                        'Error!',
                        'An error occurred while deleting the session.' + xhr + status + error,
                        'error'
                    );
                }
            });
    }
        })
    }

    function DeleteSlot(sessionId, slotId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '/Slot/Delete', // URL of the delete action
                    data: { id: slotId },
                    dataType: "json",
                    @* contentType: "application/json; charset=utf-8",*@
                success: function (response) {
                    if (response.success) {
                        Swal.fire(
                            'Deleted!',
                            'Your slot has been deleted.',
                            'success'
                        ).then(() => {
                            SlotPopUp(sessionId);
@*                            location.reload(); // Refresh the page after confirmation dialog is closed
*@                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            response.message,
                            'error'
                        );
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire(
                        'Error!',
                        'An error occurred while deleting the slot.' + xhr + status + error,
                        'error'
                    );
                }
            });
    }
        })
    }

    function DeleteTherapistSession(sessionId, therapistId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '/TherapistSession/Delete', // URL of the delete action
                    data: { sessionId: sessionId, therapistId: therapistId},
                    dataType: "json",
                    @* contentType: "application/json; charset=utf-8",*@
                success: function (response) {
                    if (response.success) {
                        Swal.fire(
                            'Deleted!',
                            'Your session has been deleted.',
                            'success'
                        ).then(() => {
                            TherapistSessionPopUp(sessionId);
@*                            location.reload(); // Refresh the page after confirmation dialog is closed
*@                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            response.message,
                            'error'
                        );
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire(
                        'Error!',
                        'An error occurred while deleting the session.' + xhr + status + error,
                        'error'
                    );
                }
            });
    }
        })
    }
</script>